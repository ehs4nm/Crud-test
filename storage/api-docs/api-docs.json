{
    "openapi": "3.0.0",
    "info": {
        "title": "Crud Test API",
        "description": "API documentation for My Laravel Crud Test project",
        "contact": {
            "email": "mohiti.ehsan@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "API server"
        }
    ],
    "paths": {
        "/api/customers": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Get all customers",
                "description": "Get all customers list",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            },
            "post": {
                "tags": [
                    "customers"
                ],
                "summary": "Add new customer in database",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+18026872706"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "bank_account_number": {
                                        "type": "string",
                                        "example": "NL10NGKK6133690858"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/customers/{customer}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Get single customer",
                "description": "Get single customer",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "ID of customer to return",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "customers"
                ],
                "summary": "Deletes a customer",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "customer to delete",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "customer not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "customers"
                ],
                "summary": "update existing customer on database",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "customer id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+18026872706"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "bank_account_number": {
                                        "type": "string",
                                        "example": "NL10NGKK6133690858"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully"
                    },
                    "404": {
                        "description": "Item not found"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        }
    }
}